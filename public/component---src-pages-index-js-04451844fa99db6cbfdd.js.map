{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/navbar.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_header__WEBPACK_IMPORTED_MODULE_1__","_components_navbar__WEBPACK_IMPORTED_MODULE_2__","a","createElement","className","headerText","src","alt","m","module","exports","require","default","Header","props","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","Object","assign","json","loader","enqueue","createContext","Navbar","react_default","url","title","map","navbarItem","i","gatsby_link_default","to","key"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAKeE,EAAA,0BAGfE,EAAAI,EAAAC,cAAA,OAAKC,UAAU,aACXN,EAAAI,EAAAC,cAACF,EAAA,EAAD,MACAH,EAAAI,EAAAC,cAACH,EAAA,EAAD,CAAQK,WAAW,kBACnBP,EAAAI,EAAAC,cAAA,0BACAL,EAAAI,EAAAC,cAAA,OAAKG,IAAI,6CAA6CC,IAAI,4BCZ9D,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAX,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAYegB,IATf,SAAgBC,GACZ,OACAhB,EAAAI,EAAAC,cAAA,OAAKC,UAAU,UAEfN,EAAAI,EAAAC,cAAA,UACKW,EAAMT,WADX,kFCeWU,UAjBU,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGEC,IAAMhB,cAAciB,IAApBC,OAAAC,OAAA,CACLL,WACAC,iBACGA,EAAcK,OALV,yFCOcC,QAAOC,QAELN,IAAMO,cAAc,ICehCC,IA5Bf,WAcI,OACIC,EAAA1B,EAAAC,cAAA,OAAKC,UAAU,UAdP,CAAC,CACLyB,IAAK,IACLC,MAAO,QAEX,CACID,IAAK,WACLC,MAAO,WAEX,CACID,IAAK,SACLC,MAAO,UAKAC,IAAI,SAACC,EAAYC,GACrB,OACIL,EAAA1B,EAAAC,cAAC+B,EAAAhC,EAAD,CAAMiC,GAAIH,EAAWH,IAAKzB,UAAU,cAAcgC,IAAKH,GAAID,EAAWF","file":"component---src-pages-index-js-04451844fa99db6cbfdd.js","sourcesContent":["import React from \"react\";\nimport Header from '../components/header'\nimport Navbar from '../components/navbar'\n\n\nexport default () => \n(\n\n<div className=\"page-wrap\">\n    <Navbar/>\n    <Header headerText=\"Hello Gatsby!\"/>\n    <p>What a world.</p>\n    <img src=\"https://source.unsplash.com/random/400x200\" alt=\"\" />\n    </div>\n)\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\n// import '../assets/css/header.css'\n\nfunction Header(props) {\n    return ( \n    <div className=\"header\">\n\n    <h1> \n        {props.headerText} </h1>\n    </div>\n    )\n}\nexport default Header","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react'\nimport { Link } from 'gatsby';\n\nfunction Navbar () {\n    let pages = [{\n            url: '/',\n            title: \"Home\"\n        },\n        {\n            url: '/contact',\n            title: \"Contact\"\n        },\n        {\n            url: '/about',\n            title: \"About\"\n        }\n    ]\n    return (\n        <div className=\"navbar\">\n            {pages.map((navbarItem, i)=> {\n               return(\n                   <Link to={navbarItem.url} className=\"navbar-item\" key={i}>{navbarItem.title}</Link>\n\n               )\n                    \n            })}\n         \n        </div>\n    )\n}\n\nexport default Navbar"],"sourceRoot":""}